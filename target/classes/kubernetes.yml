---
apiVersion: "v1"
kind: "Template"
labels: {}
metadata:
  annotations:
    fabric8.mobiles/summary: "Simple Wildfly Application deployed as war"
    fabric8.mobiles/iconUrl: "img/icons/wildfly.svg"
    description: "# War Wildlfy QuickStart\r\n\r\nThis quickstart exposes a simple\
      \ application with a simple REST service deployed on top of Wildfly 9.0.2.Final.\
      \ \r\nThis service can be called from the home page of the application.\r\n\r\
      \nThe example is based on Markus Eisele blog post:\r\nhttp://blog.eisele.net/2015/07/running-wildfly-on-openshift-3-with-kubernetes-fabric8-on-windows.html\r\
      \n\r\n### Building\r\n\r\nThe example can be built with\r\n\r\n    mvn clean\
      \ install\r\n\r\n### Running the example in fabric8\r\n\r\nIt is assumed a running\
      \ Kubernetes platform is already running. If not you can find details how to\
      \ [get started](http://fabric8.io/guide/getStarted/index.html).\r\n\r\nThe example\
      \ can be built and deployed using a single goal:\r\n\r\n    mvn -Pf8-local-deploy\r\
      \n\r\nWhen the example runs in fabric8, you can use the OpenShift client tool\
      \ to inspect the status\r\n\r\nTo list all the running pods:\r\n\r\n    oc get\
      \ pods\r\n\r\nThen find the name of the pod that runs this quickstart, and output\
      \ the logs from the running pods with:\r\n\r\n    oc logs <name of pod>\r\n\r\
      \nYou can also use the fabric8 [web console](http://fabric8.io/guide/console.html)\
      \ to manage the\r\nrunning pods, and view logs and much more.\r\n\r\n### Access\
      \ services using a web browser\r\n\r\nWhen the application is running, you can\
      \ use a web browser to access the HTTP service. Assuming that you\r\nhave a\
      \ [Vagrant setup](http://fabric8.io/guide/getStarted/vagrant.html) you can access\
      \ the application with\r\n`http://war-wildfly-default.vagrant.f8/`.\r\n\r\n\
      Notice: As it depends on your OpenShift setup, the hostname (route) might vary.\
      \ Verify with `oc get routes` which\r\nhostname is valid for you.\r\n\r\n###\
      \ More details\r\n\r\nYou can find more details about running this [quickstart](http://fabric8.io/guide/quickstarts/running.html)\
      \ on the website. This also includes instructions how to change the Docker image\
      \ user and registry.\r\n"
  labels: {}
  name: "mobiles"
objects:
- apiVersion: "v1"
  kind: "Service"
  metadata:
    annotations: {}
    labels:
      project: "mobiles"
      provider: "fabric8"
      version: "1.0-SNAPSHOT"
      group: "quickstarts"
    name: "mobiles"
  spec:
    deprecatedPublicIPs: []
    externalIPs: []
    ports:
    - port: 80
      protocol: "TCP"
      targetPort: 8080
    selector:
      project: "mobiles"
      provider: "fabric8"
      group: "quickstarts"
    type: "LoadBalancer"
- apiVersion: "v1"
  kind: "ReplicationController"
  metadata:
    annotations: {}
    labels:
      project: "mobiles"
      provider: "fabric8"
      version: "1.0-SNAPSHOT"
      group: "quickstarts"
    name: "mobiles"
  spec:
    replicas: 1
    selector:
      project: "mobiles"
      provider: "fabric8"
      version: "1.0-SNAPSHOT"
      group: "quickstarts"
    template:
      metadata:
        annotations: {}
        labels:
          project: "mobiles"
          provider: "fabric8"
          version: "1.0-SNAPSHOT"
          group: "quickstarts"
      spec:
        containers:
        - args: []
          command: []
          env:
          - name: "KUBERNETES_NAMESPACE"
            valueFrom:
              fieldRef:
                fieldPath: "metadata.namespace"
          image: "fabric8/mobiles:1.0-SNAPSHOT"
          name: "mobiles"
          ports: []
          readinessProbe:
            httpGet:
              httpHeaders: []
              path: "/"
              port: 8080
            initialDelaySeconds: 5
            timeoutSeconds: 30
          securityContext: {}
          volumeMounts: []
        imagePullSecrets: []
        nodeSelector: {}
        volumes: []
parameters: []
